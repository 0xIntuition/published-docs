"use strict";(self.webpackChunkdocu_notion_sample_site=self.webpackChunkdocu_notion_sample_site||[]).push([[8298],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=l.createContext({}),u=function(e){var t=l.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return l.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,f=p["".concat(d,".").concat(m)]||p[m]||c[m]||r;return a?l.createElement(f,i(i({ref:t},s),{},{components:a})):l.createElement(f,i({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<r;u++)i[u]=a[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7211:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var l=a(7462),n=(a(7294),a(3905));const r={title:"Build & Deploy Instructions",sidebar_position:2,slug:"/build-deploy"},i="Environment Preparation",o={unversionedId:"build-deploy",id:"build-deploy",title:"Build & Deploy Instructions",description:"163450d37d068191aca0cdc15bf93eb7}",source:"@site/docs/contracts/build-deploy.md",sourceDirName:".",slug:"/build-deploy",permalink:"/fr/contracts/build-deploy",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Build & Deploy Instructions",sidebar_position:2,slug:"/build-deploy"},sidebar:"contractsSidebar",previous:{title:"Vaults",permalink:"/fr/contracts/vaults"},next:{title:"EthMultiVault.sol",permalink:"/fr/contracts/ethmultivault"}},d={},u=[{value:"Prerequisites",id:"163450d37d0681f6a6a9ec99337bce6d",level:3},{value:"Required Tools",id:"163450d37d0681d1801fdbb2c066f92b",level:3},{value:"Optional VSCode Plugins",id:"163450d37d06816c9cf8f9988268ff83",level:3},{value:"Local Development Setup",id:"163450d37d06813c9637e6302908bff4",level:3},{value:"Build &amp; Deploy Process",id:"163450d37d0681118558ea58662690ed",level:2},{value:"1. Build Contracts",id:"163450d37d06818e891de0d8d8e5547f",level:3},{value:"2. Run Tests",id:"163450d37d0681768515fe9cf3d336e9",level:3},{value:"3. Deployment Process",id:"163450d37d0681238b1ff77b98c8a9ed",level:3},{value:"Prerequisites",id:"163450d37d06813296d4f94b25f6282d",level:3},{value:"Deploy Command",id:"163450d37d06818b9d00f7be296dc507",level:3},{value:"4. Contract Verification",id:"163450d37d0681428befd968cff5da98",level:3},{value:"Setup",id:"163450d37d06817b9205d5953908f37d",level:3},{value:"Verify Command",id:"163450d37d0681799fbeedd89cfc21cb",level:3},{value:"Important Notes",id:"163450d37d06816d9066c7a170d9a779",level:3},{value:"Tips &amp; Troubleshooting",id:"163450d37d0681cb9fb9e27a1d2e30f7",level:2}],s={toc:u};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"163450d37d068191aca0cdc15bf93eb7"},"Environment Preparation"),(0,n.kt)("h3",{id:"163450d37d0681f6a6a9ec99337bce6d"},"Prerequisites"),(0,n.kt)("h3",{id:"163450d37d0681d1801fdbb2c066f92b"},"Required Tools"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Solidity ^0.8.18"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Primary smart contract programming language"),(0,n.kt)("li",{parentName:"ul"},"Ensures compatibility with latest EVM features"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Foundry Toolkit"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"forge"),": Development, testing, and deployment"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cast"),": Contract interaction and network data reading"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"anvil"),": Local Ethereum node")))),(0,n.kt)("h3",{id:"163450d37d06816c9cf8f9988268ff83"},"Optional VSCode Plugins"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Hardhat Solidity Plugin"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Enhanced Solidity development features"),(0,n.kt)("li",{parentName:"ul"},"Auto-completion and code snippets"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Coverage Gutters"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Visualize code coverage in editor"),(0,n.kt)("li",{parentName:"ul"},"Highlight tested/untested paths")))),(0,n.kt)("h3",{id:"163450d37d06813c9637e6302908bff4"},"Local Development Setup"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Install Dependencies"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"npm install && forge install\n\n")),(0,n.kt)("p",null,"This command installs:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Node.js packages for development tasks"),(0,n.kt)("li",{parentName:"ul"},"Foundry dependencies for smart contract operations")),(0,n.kt)("h2",{id:"163450d37d0681118558ea58662690ed"},"Build & Deploy Process"),(0,n.kt)("h3",{id:"163450d37d06818e891de0d8d8e5547f"},"1. Build Contracts"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"forge build\n\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Compiles all Solidity contracts"),(0,n.kt)("li",{parentName:"ul"},"Generates necessary artifacts (ABI, bytecode)"),(0,n.kt)("li",{parentName:"ul"},"Uses specified solc version")),(0,n.kt)("h3",{id:"163450d37d0681768515fe9cf3d336e9"},"2. Run Tests"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"forge test -vvv\n\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"vvv")," flag increases output verbosity"),(0,n.kt)("li",{parentName:"ul"},"Shows detailed test information"),(0,n.kt)("li",{parentName:"ul"},"Displays gas usage"),(0,n.kt)("li",{parentName:"ul"},"Can use up to 5 v's for maximum verbosity")),(0,n.kt)("h3",{id:"163450d37d0681238b1ff77b98c8a9ed"},"3. Deployment Process"),(0,n.kt)("h3",{id:"163450d37d06813296d4f94b25f6282d"},"Prerequisites"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Network RPC URL"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Target network: Base Sepolia testnet (for testnet phase)"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Deployer Account Setup"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Export private key in terminal"),(0,n.kt)("li",{parentName:"ul"},"Fund account with test ETH"),(0,n.kt)("li",{parentName:"ul"},"For Base Sepolia: Use Alchemy's testnet faucet")))),(0,n.kt)("h3",{id:"163450d37d06818b9d00f7be296dc507"},"Deploy Command"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"forge script script/Deploy.s.sol --broadcast --rpc-url <your_rpc_url> --private-key $PRIVATE_KEY\n\n")),(0,n.kt)("h3",{id:"163450d37d0681428befd968cff5da98"},"4. Contract Verification"),(0,n.kt)("h3",{id:"163450d37d06817b9205d5953908f37d"},"Setup"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Export Etherscan API key:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"export ETHERSCAN_API_KEY=your_api_key\n\n")),(0,n.kt)("h3",{id:"163450d37d0681799fbeedd89cfc21cb"},"Verify Command"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"forge verify-contract <0x_contract_address> ContractName --watch --chain-id <chain_id>\n\n")),(0,n.kt)("h3",{id:"163450d37d06816d9066c7a170d9a779"},"Important Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Optional: Use ",(0,n.kt)("inlineCode",{parentName:"li"},"-constructor-args")," for contracts with constructor parameters"),(0,n.kt)("li",{parentName:"ul"},"Base Sepolia chain ID: 84532"),(0,n.kt)("li",{parentName:"ul"},"Parameters must be ABI-encoded format")),(0,n.kt)("h2",{id:"163450d37d0681cb9fb9e27a1d2e30f7"},"Tips & Troubleshooting"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Ensure sufficient funds in deployer account for gas fees"),(0,n.kt)("li",{parentName:"ul"},"Double-check network RPC URL before deployment"),(0,n.kt)("li",{parentName:"ul"},"Verify contract source code matches deployed bytecode"),(0,n.kt)("li",{parentName:"ul"},"Keep private keys secure and never commit them to version control")))}c.isMDXComponent=!0}}]);