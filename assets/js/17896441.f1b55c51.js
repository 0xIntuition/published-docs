"use strict";(self.webpackChunkdocu_notion_sample_site=self.webpackChunkdocu_notion_sample_site||[]).push([[7918],{1488:(e,n,t)=>{t.d(n,{Z:()=>r});var o=t(7294),a=t(4734),d=t(1262);function i(){const[e,n]=o.useState("Loading...");return o.useEffect((()=>{console.log("SandboxContent mounted");const e=document.createElement("script");return e.src="https://embeddable-sandbox.cdn.apollographql.com/_latest/embeddable-sandbox.umd.production.min.js",e.async=!0,e.onload=()=>{console.log("Script loaded"),n("Script loaded, initializing sandbox...");try{window.EmbeddedSandbox?(new window.EmbeddedSandbox({target:"#embedded-sandbox",initialEndpoint:"https://dev.base.intuition-api.com/v1/graphql",initialState:{document:"query GetAtoms($limit: Int, $offset: Int, $orderBy: [atoms_order_by!], $where: atoms_bool_exp) {\n                atoms_aggregate(where: $where) {\n                  aggregate {\n                    count\n                  }\n                }\n                atoms(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {\n                  # AtomMetadata fields\n                  id\n                  image\n                  label\n                  emoji\n                  type\n                  wallet_id\n                  creator {\n                    id\n                    label\n                    image\n                  }\n\n                  # AtomTxn fields\n                  block_number\n                  block_timestamp\n                  transaction_hash\n                  creator_id\n\n                  # AtomVaultDetails fields\n                  vault_id\n                  wallet_id\n                  vault {\n                    position_count\n                    total_shares\n                    current_share_price\n                    positions_aggregate {\n                      aggregate {\n                        count\n                        sum {\n                          shares\n                        }\n                      }\n                    }\n                    positions {\n                      id\n                      account {\n                        label\n                        id\n                      }\n                      shares\n                    }\n                  }\n                }\n              }",variables:{},headers:{},includeCookies:!1}}),n("Sandbox initialized")):n("Error: EmbeddedSandbox not found")}catch(e){console.error("Sandbox initialization error:",e),n("Error: "+e.message)}},document.body.appendChild(e),()=>{document.body.contains(e)&&document.body.removeChild(e)}}),[]),o.createElement("div",{id:"embedded-sandbox",style:{height:"600px",width:"100%",margin:"20px 0",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px"}})}const r={...a.Z,ApolloSandbox:function(){return o.createElement(d.Z,null,(()=>o.createElement(i,null)))}}}}]);