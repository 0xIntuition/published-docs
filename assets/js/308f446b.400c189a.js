"use strict";(self.webpackChunkdocu_notion_sample_site=self.webpackChunkdocu_notion_sample_site||[]).push([[6435],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),p=r,f=u["".concat(s,".").concat(p)]||u[p]||d[p]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={title:"Attest Atom",sidebar_position:3,slug:"/attest-atom"},o=void 0,l={unversionedId:"Contract-Interactions/attest-atom",id:"Contract-Interactions/attest-atom",title:"Attest Atom",description:"Attestations allow users to signal support for Atoms by depositing ETH into their associated vaults. Each deposit represents a stake in the Atom's relevance and validity, with the ability to redeem these stakes later.",source:"@site/docs/dev/Contract-Interactions/attest-atom.md",sourceDirName:"Contract-Interactions",slug:"/attest-atom",permalink:"/dev/attest-atom",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Attest Atom",sidebar_position:3,slug:"/attest-atom"},sidebar:"contractsSidebar",previous:{title:"Create Triple",permalink:"/dev/create-triple"},next:{title:"Attest Triple",permalink:"/dev/attest-triple"}},s={},m=[{value:"Context",id:"163450d37d06817881c1e5ecfba715cb",level:2},{value:"depositAtom",id:"163450d37d0681b5bc31e809b7595a19",level:2},{value:"Parameters",id:"163450d37d06815facd8c7204abebbee",level:3},{value:"Implementation",id:"163450d37d0681c99c0df94b5c39e87e",level:3},{value:"redeemAtom",id:"163450d37d068167b6c0d957d3a33738",level:2},{value:"Parameters",id:"163450d37d068181a0eaf07377723a73",level:3},{value:"Implementation",id:"163450d37d06813a9b66cd676ed09480",level:3},{value:"Cost Considerations",id:"163450d37d0681ff8cf6cc94ae85d44b",level:2}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Attestations allow users to signal support for Atoms by depositing ETH into their associated vaults. Each deposit represents a stake in the Atom's relevance and validity, with the ability to redeem these stakes later."),(0,r.kt)("h2",{id:"163450d37d06817881c1e5ecfba715cb"},"Context"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"depositAtom")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"redeemAtom")," functions are part of the EthMultiVault contract, which manages the staking and signaling mechanisms for Atoms. When attesting to an Atom, users deposit ETH into the Atom's vault, receiving shares proportional to their deposit. These shares can later be redeemed to withdraw the original deposit plus any accrued rewards or minus any fees."),(0,r.kt)("h2",{id:"163450d37d0681b5bc31e809b7595a19"},"depositAtom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function depositAtom(\n    address receiver,\n    uint256 id\n) external payable nonReentrant whenNotPaused returns (uint256)\n")),(0,r.kt)("h3",{id:"163450d37d06815facd8c7204abebbee"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"receiver"),": Address to receive the vault shares"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id"),": Vault ID of the Atom"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": Amount of ETH to deposit"),(0,r.kt)("li",{parentName:"ul"},"Returns: ",(0,r.kt)("inlineCode",{parentName:"li"},"uint256")," - Amount of shares received")),(0,r.kt)("h3",{id:"163450d37d0681c99c0df94b5c39e87e"},"Implementation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// useDepositAtom Hook\nimport { type GetContractReturnType } from 'viem'\nimport { base } from 'viem/chains'\n\nimport { useContractWriteAndWait } from './useContractWriteAndWait'\nimport { useMultivaultContract } from './useMultivaultContract'\n\nexport const useDepositAtom = () => {\n  const multivault = useMultivaultContract(\n    base.id,\n  ) as GetContractReturnType\n\n  return useContractWriteAndWait({\n    ...multivault,\n    functionName: 'depositAtom',\n  })\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Usage Example\nconst {\n  writeAsync: writeDepositAtom,\n  awaitingWalletConfirmation,\n  awaitingOnChainConfirmation,\n} = useDepositAtom()\n\nasync function handleDepositAtom(atomId: string, amount: bigint) {\n  if (\n    !awaitingOnChainConfirmation &&\n    !awaitingWalletConfirmation &&\n    writeDepositAtom\n  ) {\n    try {\n      const tx = await writeDepositAtom({\n        address: MULTIVAULT_CONTRACT_ADDRESS,\n        abi: multivaultAbi,\n        functionName: 'depositAtom',\n        args: [address, BigInt(atomId)],\n        value: amount,\n      })\n\n      if (tx?.hash) {\n        const receipt = await publicClient.waitForTransactionReceipt({\n          hash: tx.hash,\n        })\n        // Handle success\n      }\n    } catch (error) {\n      // Handle error\n    }\n  }\n}\n\n")),(0,r.kt)("h2",{id:"163450d37d068167b6c0d957d3a33738"},"redeemAtom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemAtom(\n    uint256 shares,\n    address receiver,\n    uint256 id\n) external nonReentrant returns (uint256)\n\n")),(0,r.kt)("h3",{id:"163450d37d068181a0eaf07377723a73"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"shares"),": Number of vault shares to redeem"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"receiver"),": Address to receive the redeemed ETH"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id"),": Vault ID of the Atom"),(0,r.kt)("li",{parentName:"ul"},"Returns: ",(0,r.kt)("inlineCode",{parentName:"li"},"uint256")," - Amount of ETH received")),(0,r.kt)("h3",{id:"163450d37d06813a9b66cd676ed09480"},"Implementation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// useRedeemAtom Hook\nimport { type GetContractReturnType } from 'viem'\nimport { base } from 'viem/chains'\n\nimport { useContractWriteAndWait } from './useContractWriteAndWait'\nimport { useMultivaultContract } from './useMultivaultContract'\n\nexport const useRedeemAtom = () => {\n  const multivault = useMultivaultContract(\n    base.id,\n  ) as GetContractReturnType\n\n  return useContractWriteAndWait({\n    ...multivault,\n    functionName: 'redeemAtom',\n  })\n}\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Usage Example\nconst {\n  writeAsync: writeRedeemAtom,\n  awaitingWalletConfirmation,\n  awaitingOnChainConfirmation,\n} = useRedeemAtom()\n\nasync function handleRedeemAtom(atomId: string, shares: bigint) {\n  if (\n    !awaitingOnChainConfirmation &&\n    !awaitingWalletConfirmation &&\n    writeRedeemAtom\n  ) {\n    try {\n      const tx = await writeRedeemAtom({\n        address: MULTIVAULT_CONTRACT_ADDRESS,\n        abi: multivaultAbi,\n        functionName: 'redeemAtom',\n        args: [shares, address, BigInt(atomId)],\n      })\n\n      if (tx?.hash) {\n        const receipt = await publicClient.waitForTransactionReceipt({\n          hash: tx.hash,\n        })\n        // Handle success\n      }\n    } catch (error) {\n      // Handle error\n    }\n  }\n}\n\n")),(0,r.kt)("h2",{id:"163450d37d0681ff8cf6cc94ae85d44b"},"Cost Considerations"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Deposit Fees"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Entry fee: Percentage taken from deposit"),(0,r.kt)("li",{parentName:"ul"},"Protocol fee: Portion sent to protocol treasury"),(0,r.kt)("li",{parentName:"ul"},"Gas fees: Network transaction costs"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Redemption Fees"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Exit fee: Percentage taken from withdrawal"),(0,r.kt)("li",{parentName:"ul"},"Protocol fee: Portion sent to protocol treasury")))),(0,r.kt)("p",null,"See also:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Problem Internal Link]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Problem Internal Link]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Problem Internal Link]"))))}d.isMDXComponent=!0}}]);